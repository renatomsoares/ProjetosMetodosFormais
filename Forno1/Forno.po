THEORY ProofList IS
_f(1) & _f(2) & _f(22) & _f(48) & WellDefinedness_fazerAlimento.5,(_f(71) => _f(89));
_f(1) & _f(2) & _f(22) & _f(48) & WellDefinedness_fazerAlimento.4,(_f(71) => _f(97));
_f(1) & _f(2) & _f(22) & _f(48) & WellDefinedness_fazerAlimento.3,(_f(71) => _f(85));
_f(1) & _f(2) & _f(22) & _f(48) & WellDefinedness_fazerAlimento.2,(_f(71) => _f(96));
_f(1) & _f(2) & _f(22) & _f(48) & WellDefinedness_fazerAlimento.1,(_f(71) => _f(86));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_limparIngredientesReceita.3,(_f(87) & _f(86) & _f(85) & _f(71) => _f(91));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_limparIngredientesReceita.2,(_f(87) & _f(86) & _f(85) & _f(71) => _f(89));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_limparIngredientesReceita.1,(_f(87) & _f(86) & _f(85) & _f(71) => _f(88));
_f(1) & _f(2) & _f(22) & _f(40) & WellDefinedness_atualizarReceitaAdicinandoIngrediente.2,(_f(71) => _f(89));
_f(1) & _f(2) & _f(22) & _f(40) & WellDefinedness_atualizarReceitaAdicinandoIngrediente.1,(_f(71) => _f(88));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_decrementarIngredienteDoEstoque.3,(_f(71) => _f(84));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_decrementarIngredienteDoEstoque.2,(_f(71) => _f(83));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_decrementarIngredienteDoEstoque.1,(_f(71) => _f(74));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_decrementarIngredienteDoEstoque.1,(_f(73) & _f(78) & _f(77) & _f(76) & _f(80) & _f(71) => _f(74));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_incrementarIngredienteDoEstoque.3,(_f(71) => _f(82));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_incrementarIngredienteDoEstoque.2,(_f(71) => _f(81));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_incrementarIngredienteDoEstoque.1,(_f(71) => _f(74));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_incrementarIngredienteDoEstoque.1,(_f(73) & _f(78) & _f(77) & _f(76) & _f(80) & _f(71) => _f(74));
_f(1) & _f(2) & _f(22) & _f(30) & WellDefinedness_inserirNovoIngredienteNoEstoque.1,(_f(31) & _f(71) => _f(72));
_f(1) & _f(2) & _f(22) & _f(24) & WellDefinedness_qntIngredienteNoEstoque.1,(_f(71) => _f(74));
_f(1) & _f(2) & _f(22) & _f(23) & WellDefinedness_numIngredientesNoEstoque.1,(_f(71) => _f(72));
_f(1) & _f(2) & WellDefinednessInvariant.1,(_f(70) & _f(69) & _f(68) & _f(67) & _f(66) & _f(65) & _f(64) & _f(63) & _f(71) => _f(72));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.12,(_f(51) & _f(50) & _f(3) & _f(58) => _f(59));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.11,(_f(51) & _f(50) & _f(3) & _f(56) => _f(57));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.10,(_f(51) & _f(50) & _f(3) & _f(18) => _f(28));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.9,(_f(51) & _f(50) & _f(3) & _f(16) => _f(54));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.8,(_f(51) & _f(50) & _f(3) & _f(14) => _f(53));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.7,(_f(51) & _f(49) & _f(3) & _f(58) => _f(59));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.6,(_f(51) & _f(49) & _f(3) & _f(56) => _f(57));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.5,(_f(51) & _f(49) & _f(3) & _f(20) => _f(55));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.4,(_f(51) & _f(49) & _f(3) & _f(18) => _f(28));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.3,(_f(51) & _f(49) & _f(3) & _f(16) => _f(54));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.2,(_f(51) & _f(49) & _f(3) & _f(14) => _f(53));
_f(1) & _f(2) & _f(22) & _f(48) & fazerAlimento.1,(_f(51) & _f(49) & _f(3) & _f(8) => _f(52));
_f(1) & _f(2) & _f(22) & _f(44) & cadastrarReceita.3,(_f(3) & _f(12) => _f(47));
_f(1) & _f(2) & _f(22) & _f(44) & cadastrarReceita.2,(_f(3) & _f(10) => _f(46));
_f(1) & _f(2) & _f(22) & _f(44) & cadastrarReceita.1,(_f(3) & _f(4) => _f(45));
_f(1) & _f(2) & _f(22) & _f(42) & limparIngredientesReceita.1,(_f(3) & _f(4) => _f(43));
_f(1) & _f(2) & _f(22) & _f(40) & atualizarReceitaAdicinandoIngrediente.1,(_f(3) & _f(4) => _f(41));
_f(1) & _f(2) & _f(22) & _f(35) & decrementarIngredienteDoEstoque.2,(_f(3) & _f(20) => _f(39));
_f(1) & _f(2) & _f(22) & _f(35) & decrementarIngredienteDoEstoque.1,(_f(3) & _f(8) => _f(38));
_f(1) & _f(2) & _f(22) & _f(35) & incrementarIngredienteDoEstoque.2,(_f(3) & _f(20) => _f(37));
_f(1) & _f(2) & _f(22) & _f(35) & incrementarIngredienteDoEstoque.1,(_f(3) & _f(8) => _f(36));
_f(1) & _f(2) & _f(22) & _f(30) & inserirNovoIngredienteNoEstoque.2,(_f(31) & _f(3) & _f(20) => _f(34));
_f(1) & _f(2) & _f(22) & _f(30) & inserirNovoIngredienteNoEstoque.1,(_f(31) & _f(3) & _f(8) => _f(33));
_f(1) & _f(2) & _f(22) & _f(29) & destravaarForno.1,(_f(3) & _f(18) => _f(19));
_f(1) & _f(2) & _f(22) & _f(27) & travaarForno.1,(_f(3) & _f(18) => _f(28));
_f(1) & _f(2) & _f(22) & _f(25) & decrementaTemp.1,(_f(3) & _f(14) => _f(26));
_f(1) & _f(2) & Initialisation.9,(_f(3) & _f(20) => _f(21));
_f(1) & _f(2) & Initialisation.8,(_f(3) & _f(18) => _f(19));
_f(1) & _f(2) & Initialisation.7,(_f(3) & _f(16) => _f(17));
_f(1) & _f(2) & Initialisation.6,(_f(3) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.5,(_f(3) & _f(12) => _f(13));
_f(1) & _f(2) & Initialisation.4,(_f(3) & _f(10) => _f(11));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
INGREDIENTES: FIN(INTEGER) & not(INGREDIENTES = {}) & ALIMENTO: FIN(INTEGER) & not(ALIMENTO = {});
"Invariant is preserved";
"Check invariant ((receita_alimento_ingredientes) : (((ALIMENTO) <-> (POW(INGREDIENTES)))))";
(({}) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
"Check invariant ((receita_ingrediente_quantidade) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))))";
(({}) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))));
"Check invariant ((estoque_ingrediente_quantidade) : (((INGREDIENTES) +-> (((0) .. (2000))))))";
(({}) : (((INGREDIENTES) +-> (((0) .. (2000))))));
"Check invariant ((receita_alimento_potenciaAtualencia) : (((ALIMENTO) +-> (((150) .. (260))))))";
(({}) : (((ALIMENTO) +-> (((150) .. (260))))));
"Check invariant ((receita_alimento_temporizacao) : (((ALIMENTO) +-> (((1) .. (7200))))))";
(({}) : (((ALIMENTO) +-> (((1) .. (7200))))));
"Check invariant ((segundosTemp) : (((0) .. (7200))))";
((0) : (((0) .. (7200))));
"Check invariant ((potenciaAtual) : (((150) .. (260))))";
((150) : (((150) .. (260))));
"Check invariant ((trava) : (NAT))";
((0) : (NAT));
"Check invariant ((index_in) : (((((0) .. (card(dom(estoque_ingrediente_quantidade))))) +-> (INGREDIENTES))))";
(({}) : (((((0) .. (card(dom({}))))) +-> (INGREDIENTES))));
((receita_alimento_ingredientes) : (((ALIMENTO) <-> (POW(INGREDIENTES))))) & ((receita_ingrediente_quantidade) : (((POW(INGREDIENTES)) <-> ((NAT-{0}))))) & ((estoque_ingrediente_quantidade) : (((INGREDIENTES) +-> (((0) .. (2000)))))) & ((receita_alimento_potenciaAtualencia) : (((ALIMENTO) +-> (((150) .. (260)))))) & ((receita_alimento_temporizacao) : (((ALIMENTO) +-> (((1) .. (7200)))))) & ((segundosTemp) : (((0) .. (7200)))) & ((potenciaAtual) : (((150) .. (260)))) & ((trava) : (NAT)) & ((index_in) : (((((0) .. (card(dom(estoque_ingrediente_quantidade))))) +-> (INGREDIENTES)))) & ((tempoDeUso) : (((0) .. (7200)))) & ((qntAlimentosProduzidos) : (NAT));
btrue;
((ii) : (INGREDIENTES)) & ((ii) : (dom(estoque_ingrediente_quantidade)));
(0 +1 <= segundosTemp);
(((segundosTemp - 1)) : (((0) .. (7200))));
((trava) = (0));
((1) : (NAT));
((trava) = (1)) & ((segundosTemp) = (0));
((ii) : (INGREDIENTES)) & ((qq) : (NAT)) & (qq +1 <= 10) & (0 +1 <= qq) & not(ii : dom(estoque_ingrediente_quantidade)) & ((trava) = (0));
not(ii : dom(estoque_ingrediente_quantidade));
not(not(ii : dom(estoque_ingrediente_quantidade)));
((((estoque_ingrediente_quantidade) \/ (({((ii) |-> (qq))})))) : (((INGREDIENTES) +-> (((0) .. (2000))))));
((((index_in) \/ (({((card(dom(estoque_ingrediente_quantidade))) |-> (ii))})))) : (((((0) .. (card(dom(((estoque_ingrediente_quantidade) \/ (({((ii) |-> (qq))})))))))) +-> (INGREDIENTES))));
((ii) : (INGREDIENTES)) & ((qq) : (NAT)) & (qq +1 <= 10) & (0 +1 <= qq) & ((ii) : (dom(estoque_ingrediente_quantidade))) & ((estoque_ingrediente_quantidade )(ii) +1 <= 10) & ((trava) = (0));
((((estoque_ingrediente_quantidade) <+ (({((ii) |-> (min(({((estoque_ingrediente_quantidade )(ii) + qq)}\/{10}))))})))) : (((INGREDIENTES) +-> (((0) .. (2000))))));
((index_in) : (((((0) .. (card(dom(((estoque_ingrediente_quantidade) <+ (({((ii) |-> (min(({((estoque_ingrediente_quantidade )(ii) + qq)}\/{10}))))})))))))) +-> (INGREDIENTES))));
((((estoque_ingrediente_quantidade) <+ (({((ii) |-> (max(({((estoque_ingrediente_quantidade )(ii) - qq)}\/{0}))))})))) : (((INGREDIENTES) +-> (((0) .. (2000))))));
((index_in) : (((((0) .. (card(dom(((estoque_ingrediente_quantidade) <+ (({((ii) |-> (max(({((estoque_ingrediente_quantidade )(ii) - qq)}\/{0}))))})))))))) +-> (INGREDIENTES))));
((ii) : (INGREDIENTES)) & ((aa) : (ALIMENTO)) & ((aa) : (dom(receita_alimento_temporizacao))) & ((aa) : (dom(receita_alimento_potenciaAtualencia))) & ((trava) = (0));
((((receita_alimento_ingredientes) <+ (({((aa) |-> ((((receita_alimento_ingredientes )(aa)) \/ (({ii})))))})))) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
((aa) : (ALIMENTO)) & ((aa) : (dom(receita_alimento_temporizacao))) & ((aa) : (dom(receita_alimento_potenciaAtualencia))) & (0 +1 <= card((receita_alimento_ingredientes )(aa))) & ((trava) = (0));
((((receita_alimento_ingredientes) <+ (({((aa) |-> ({}))})))) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
((ii) : (INGREDIENTES)) & ((aa) : (ALIMENTO)) & ((tt) : (((1) .. (7200)))) & ((pp) : (((150) .. (260)))) & not(aa : dom(receita_alimento_temporizacao)) & not(aa : dom(receita_alimento_potenciaAtualencia)) & ((trava) = (0));
((((receita_alimento_ingredientes) \/ (({((aa) |-> ({}))})))) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
((((receita_alimento_potenciaAtualencia) \/ (({((aa) |-> (pp))})))) : (((ALIMENTO) +-> (((150) .. (260))))));
((((receita_alimento_temporizacao) \/ (({((aa) |-> (tt))})))) : (((ALIMENTO) +-> (((1) .. (7200))))));
((aa) : (ALIMENTO)) & ((aa) : (dom(receita_alimento_ingredientes))) & ((trava) = (0)) & (tempoDeUso +1 <= 2147483647);
(0 +1 <= (estoque_ingrediente_quantidade )(yy));
not((0 +1 <= (estoque_ingrediente_quantidade )(yy)));
((yy) : ((receita_alimento_ingredientes )(aa)));
((((estoque_ingrediente_quantidade) <+ (({((yy) |-> (max(({((estoque_ingrediente_quantidade )(yy) - 1)}\/{0}))))})))) : (((INGREDIENTES) +-> (((0) .. (2000))))));
(((receita_alimento_temporizacao )(aa)) : (((0) .. (7200))));
(((receita_alimento_potenciaAtualencia )(aa)) : (((150) .. (260))));
((index_in) : (((((0) .. (card(dom(((estoque_ingrediente_quantidade) <+ (({((yy) |-> (max(({((estoque_ingrediente_quantidade )(yy) - 1)}\/{0}))))})))))))) +-> (INGREDIENTES))));
"Check invariant ((tempoDeUso) : (((0) .. (7200))))";
(((tempoDeUso + (receita_alimento_temporizacao )(aa))) : (((0) .. (7200))));
"Check invariant ((qntAlimentosProduzidos) : (NAT))";
(((qntAlimentosProduzidos + 1)) : (NAT));
INGREDIENTES: FIN(INTEGER) & not(INGREDIENTES = {});
((tempoDeUso) : (((0) .. (7200))));
((index_in) : (((((0) .. (card(dom(estoque_ingrediente_quantidade))))) +-> (INGREDIENTES))));
((trava) : (NAT));
((potenciaAtual) : (((150) .. (260))));
((segundosTemp) : (((0) .. (7200))));
((receita_alimento_temporizacao) : (((ALIMENTO) +-> (((1) .. (7200))))));
((receita_alimento_potenciaAtualencia) : (((ALIMENTO) +-> (((150) .. (260))))));
((estoque_ingrediente_quantidade) : (((INGREDIENTES) +-> (((0) .. (2000))))));
((receita_ingrediente_quantidade) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))));
((receita_alimento_ingredientes) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
"Well definedness";
((dom(estoque_ingrediente_quantidade)) : (FIN(dom(estoque_ingrediente_quantidade))));
((ii) : (INGREDIENTES));
((estoque_ingrediente_quantidade) : (((dom(estoque_ingrediente_quantidade)) +-> (ran(estoque_ingrediente_quantidade)))));
((trava) = (1));
(0 +1 <= qq);
(qq +1 <= 10);
((qq) : (NAT));
((estoque_ingrediente_quantidade )(ii) +1 <= 10);
((ii) : (dom(estoque_ingrediente_quantidade)));
not(((({((estoque_ingrediente_quantidade )(ii) + qq)}\/{10})) = ({})));
((((({((estoque_ingrediente_quantidade )(ii) + qq)}\/{10})) /\ ((INTEGER - NATURAL)))) : (FIN(INTEGER)));
not(((({((estoque_ingrediente_quantidade )(ii) - qq)}\/{0})) = ({})));
((((({((estoque_ingrediente_quantidade )(ii) - qq)}\/{0})) /\ (NATURAL))) : (FIN(NATURAL)));
((aa) : (dom(receita_alimento_potenciaAtualencia)));
((aa) : (dom(receita_alimento_temporizacao)));
((aa) : (ALIMENTO));
((aa) : (dom(receita_alimento_ingredientes)));
((receita_alimento_ingredientes) : (((dom(receita_alimento_ingredientes)) +-> (ran(receita_alimento_ingredientes)))));
(0 +1 <= card((receita_alimento_ingredientes )(aa)));
(((receita_alimento_ingredientes )(aa)) : (FIN((receita_alimento_ingredientes )(aa))));
not(aa : dom(receita_alimento_potenciaAtualencia));
not(aa : dom(receita_alimento_temporizacao));
((pp) : (((150) .. (260))));
((tt) : (((1) .. (7200))));
((receita_alimento_temporizacao) : (((dom(receita_alimento_temporizacao)) +-> (ran(receita_alimento_temporizacao)))));
((receita_alimento_potenciaAtualencia) : (((dom(receita_alimento_potenciaAtualencia)) +-> (ran(receita_alimento_potenciaAtualencia)))))
END
&
THEORY EnumerateX
END
