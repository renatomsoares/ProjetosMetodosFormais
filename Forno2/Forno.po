THEORY ProofList IS
_f(1) & _f(2) & _f(18) & _f(45) & WellDefinedness_fazerAlimento.3,(_f(65) => _f(80));
_f(1) & _f(2) & _f(18) & _f(45) & WellDefinedness_fazerAlimento.2,(_f(65) => _f(84));
_f(1) & _f(2) & _f(18) & _f(45) & WellDefinedness_fazerAlimento.1,(_f(65) => _f(77));
_f(1) & _f(2) & _f(18) & _f(38) & WellDefinedness_atualizarReceitaAdicinandoIngrediente.2,(_f(65) => _f(80));
_f(1) & _f(2) & _f(18) & _f(38) & WellDefinedness_atualizarReceitaAdicinandoIngrediente.1,(_f(65) => _f(79));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_decrementarIngredienteDoEstoque.3,(_f(65) => _f(76));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_decrementarIngredienteDoEstoque.2,(_f(65) => _f(75));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_decrementarIngredienteDoEstoque.1,(_f(65) => _f(68));
_f(1) & _f(2) & _f(18) & WellDefinedness_Precondition_decrementarIngredienteDoEstoque.1,(_f(67) & _f(71) & _f(70) & _f(69) & _f(72) & _f(65) => _f(68));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_incrementarIngredienteDoEstoque.3,(_f(65) => _f(74));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_incrementarIngredienteDoEstoque.2,(_f(65) => _f(73));
_f(1) & _f(2) & _f(18) & _f(31) & WellDefinedness_incrementarIngredienteDoEstoque.1,(_f(65) => _f(68));
_f(1) & _f(2) & _f(18) & WellDefinedness_Precondition_incrementarIngredienteDoEstoque.1,(_f(67) & _f(71) & _f(70) & _f(69) & _f(72) & _f(65) => _f(68));
_f(1) & _f(2) & _f(18) & _f(25) & WellDefinedness_inserirNovoIngredienteNoEstoque.1,(_f(26) & _f(65) => _f(66));
_f(1) & _f(2) & _f(18) & _f(20) & WellDefinedness_qntIngredienteNoEstoque.1,(_f(65) => _f(68));
_f(1) & _f(2) & _f(18) & _f(19) & WellDefinedness_numIngredientesNoEstoque.1,(_f(65) => _f(66));
_f(1) & _f(2) & WellDefinednessInvariant.2,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(57) & _f(56) & _f(55) & _f(65) => _f(66));
_f(1) & _f(2) & WellDefinednessInvariant.1,(_f(64) & _f(63) & _f(62) & _f(61) & _f(60) & _f(59) & _f(58) & _f(57) & _f(65) => _f(66));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.7,(_f(48) & _f(47) & _f(3) & _f(51) => _f(52));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.6,(_f(48) & _f(47) & _f(3) & _f(12) => _f(13));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.5,(_f(48) & _f(46) & _f(3) & _f(16) => _f(53));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.4,(_f(48) & _f(46) & _f(3) & _f(51) => _f(52));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.3,(_f(48) & _f(46) & _f(3) & _f(14) => _f(50));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.2,(_f(48) & _f(46) & _f(3) & _f(12) => _f(13));
_f(1) & _f(2) & _f(18) & _f(45) & fazerAlimento.1,(_f(48) & _f(46) & _f(3) & _f(8) => _f(49));
_f(1) & _f(2) & _f(18) & _f(40) & cadastrarReceita.3,(_f(3) & _f(43) => _f(44));
_f(1) & _f(2) & _f(18) & _f(40) & cadastrarReceita.2,(_f(3) & _f(10) => _f(42));
_f(1) & _f(2) & _f(18) & _f(40) & cadastrarReceita.1,(_f(3) & _f(4) => _f(41));
_f(1) & _f(2) & _f(18) & _f(38) & atualizarReceitaAdicinandoIngrediente.1,(_f(3) & _f(4) => _f(39));
_f(1) & _f(2) & _f(18) & _f(31) & decrementarIngredienteDoEstoque.3,(_f(3) & _f(16) => _f(37));
_f(1) & _f(2) & _f(18) & _f(31) & decrementarIngredienteDoEstoque.2,(_f(3) & _f(14) => _f(36));
_f(1) & _f(2) & _f(18) & _f(31) & decrementarIngredienteDoEstoque.1,(_f(3) & _f(8) => _f(35));
_f(1) & _f(2) & _f(18) & _f(31) & incrementarIngredienteDoEstoque.3,(_f(3) & _f(16) => _f(34));
_f(1) & _f(2) & _f(18) & _f(31) & incrementarIngredienteDoEstoque.2,(_f(3) & _f(14) => _f(33));
_f(1) & _f(2) & _f(18) & _f(31) & incrementarIngredienteDoEstoque.1,(_f(3) & _f(8) => _f(32));
_f(1) & _f(2) & _f(18) & _f(25) & inserirNovoIngredienteNoEstoque.3,(_f(26) & _f(3) & _f(16) => _f(30));
_f(1) & _f(2) & _f(18) & _f(25) & inserirNovoIngredienteNoEstoque.2,(_f(26) & _f(3) & _f(14) => _f(29));
_f(1) & _f(2) & _f(18) & _f(25) & inserirNovoIngredienteNoEstoque.1,(_f(26) & _f(3) & _f(8) => _f(28));
_f(1) & _f(2) & _f(18) & _f(23) & destravarForno.1,(_f(3) & _f(22) => _f(24));
_f(1) & _f(2) & _f(18) & _f(21) & travarForno.1,(_f(3) & _f(22) => _f(13));
_f(1) & _f(2) & Initialisation.7,(_f(3) & _f(16) => _f(17));
_f(1) & _f(2) & Initialisation.6,(_f(3) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.5,(_f(3) & _f(12) => _f(13));
_f(1) & _f(2) & Initialisation.4,(_f(3) & _f(10) => _f(11));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
INGREDIENTES: FIN(INTEGER) & not(INGREDIENTES = {}) & ALIMENTO: FIN(INTEGER) & not(ALIMENTO = {});
"Invariant is preserved";
"Check invariant ((receita_al_inR) : (((ALIMENTO) <-> (POW(INGREDIENTES)))))";
(({}) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
"Check invariant ((receita_in_qntR) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))))";
(({}) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))));
"Check invariant ((estoqueR) : (((INGREDIENTES) +-> (((0) .. (10))))))";
(({}) : (((INGREDIENTES) +-> (((0) .. (10))))));
"Check invariant ((potenciaR) : (((ALIMENTO) +-> (NAT))))";
(({}) : (((ALIMENTO) +-> (NAT))));
"Check invariant ((cron) : (NAT))";
((0) : (NAT));
"Check invariant ((index_in) : (((((0) .. (card(dom(estoqueR))))) +-> (INGREDIENTES))))";
(({}) : (((((0) .. (card(dom({}))))) +-> (INGREDIENTES))));
"Check invariant ((qtdIng) : (((0) .. (card(dom(estoqueR))))))";
((0) : (((0) .. (card(dom({}))))));
((receita_al_inR) : (((ALIMENTO) <-> (POW(INGREDIENTES))))) & ((receita_in_qntR) : (((POW(INGREDIENTES)) <-> ((NAT-{0}))))) & ((estoqueR) : (((INGREDIENTES) +-> (((0) .. (10)))))) & ((potenciaR) : (((ALIMENTO) +-> (NAT)))) & ((temporizacaoR) : (((ALIMENTO) +-> (NAT)))) & ((cron) : (NAT)) & ((pot) : (NAT)) & ((trav) : (NAT)) & ((index_in) : (((((0) .. (card(dom(estoqueR))))) +-> (INGREDIENTES)))) & ((tempoDeUso) : (NAT)) & ((qtdIng) : (((0) .. (card(dom(estoqueR))))));
btrue;
((ii) : (INGREDIENTES)) & ((ii) : (dom(estoqueR)));
((trav) = (1));
"Check invariant ((trav) : (NAT))";
((trav) = (0));
((1) : (NAT));
((ii) : (INGREDIENTES)) & ((qq) : (NAT)) & (qq +1 <= 10) & (0 +1 <= qq) & not(ii : dom(estoqueR));
not(ii : dom(estoqueR));
not(not(ii : dom(estoqueR)));
((((estoqueR) \/ (({((ii) |-> (qq))})))) : (((INGREDIENTES) +-> (((0) .. (10))))));
((((index_in) \/ (({((card(dom(estoqueR))) |-> (ii))})))) : (((((0) .. (card(dom(((estoqueR) \/ (({((ii) |-> (qq))})))))))) +-> (INGREDIENTES))));
((qtdIng) : (((0) .. (card(dom(((estoqueR) \/ (({((ii) |-> (qq))})))))))));
((ii) : (INGREDIENTES)) & ((qq) : (NAT)) & (qq +1 <= 10) & (0 +1 <= qq) & ((ii) : (dom(estoqueR))) & ((estoqueR )(ii) +1 <= 10);
((((estoqueR) <+ (({((ii) |-> (min(({((estoqueR )(ii) + qq)}\/{10}))))})))) : (((INGREDIENTES) +-> (((0) .. (10))))));
((index_in) : (((((0) .. (card(dom(((estoqueR) <+ (({((ii) |-> (min(({((estoqueR )(ii) + qq)}\/{10}))))})))))))) +-> (INGREDIENTES))));
((qtdIng) : (((0) .. (card(dom(((estoqueR) <+ (({((ii) |-> (min(({((estoqueR )(ii) + qq)}\/{10}))))})))))))));
((((estoqueR) <+ (({((ii) |-> (max(({((estoqueR )(ii) - qq)}\/{0}))))})))) : (((INGREDIENTES) +-> (((0) .. (10))))));
((index_in) : (((((0) .. (card(dom(((estoqueR) <+ (({((ii) |-> (max(({((estoqueR )(ii) - qq)}\/{0}))))})))))))) +-> (INGREDIENTES))));
((qtdIng) : (((0) .. (card(dom(((estoqueR) <+ (({((ii) |-> (max(({((estoqueR )(ii) - qq)}\/{0}))))})))))))));
((ii) : (INGREDIENTES)) & ((aa) : (ALIMENTO)) & ((aa) : (dom(temporizacaoR))) & ((aa) : (dom(potenciaR)));
((((receita_al_inR) <+ (({((aa) |-> ((((receita_al_inR )(aa)) \/ (({ii})))))})))) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
((ii) : (INGREDIENTES)) & ((aa) : (ALIMENTO)) & ((tt) : ((NAT-{0}))) & ((pp) : ((NAT-{0}))) & not(aa : dom(temporizacaoR)) & not(aa : dom(potenciaR));
((((receita_al_inR) \/ (({((aa) |-> ({}))})))) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
((((potenciaR) \/ (({((aa) |-> (pp))})))) : (((ALIMENTO) +-> (NAT))));
"Check invariant ((temporizacaoR) : (((ALIMENTO) +-> (NAT))))";
((((temporizacaoR) \/ (({((aa) |-> (tt))})))) : (((ALIMENTO) +-> (NAT))));
((aa) : (ALIMENTO)) & ((aa) : (dom(receita_al_inR))) & ((trav) = (1)) & (tempoDeUso +1 <= 2147483647);
(0 +1 <= (estoqueR )(yy));
not((0 +1 <= (estoqueR )(yy)));
((yy) : ((receita_al_inR )(aa)));
((((estoqueR) <+ (({((yy) |-> (max(({((estoqueR )(yy) - 1)}\/{0}))))})))) : (((INGREDIENTES) +-> (((0) .. (10))))));
((index_in) : (((((0) .. (card(dom(((estoqueR) <+ (({((yy) |-> (max(({((estoqueR )(yy) - 1)}\/{0}))))})))))))) +-> (INGREDIENTES))));
"Check invariant ((tempoDeUso) : (NAT))";
(((tempoDeUso + (temporizacaoR )(aa))) : (NAT));
((qtdIng) : (((0) .. (card(dom(((estoqueR) <+ (({((yy) |-> (max(({((estoqueR )(yy) - 1)}\/{0}))))})))))))));
INGREDIENTES: FIN(INTEGER) & not(INGREDIENTES = {});
((tempoDeUso) : (NAT));
((index_in) : (((((0) .. (card(dom(estoqueR))))) +-> (INGREDIENTES))));
((trav) : (NAT));
((pot) : (NAT));
((cron) : (NAT));
((temporizacaoR) : (((ALIMENTO) +-> (NAT))));
((potenciaR) : (((ALIMENTO) +-> (NAT))));
((estoqueR) : (((INGREDIENTES) +-> (((0) .. (10))))));
((receita_in_qntR) : (((POW(INGREDIENTES)) <-> ((NAT-{0})))));
((receita_al_inR) : (((ALIMENTO) <-> (POW(INGREDIENTES)))));
"Well definedness";
((dom(estoqueR)) : (FIN(dom(estoqueR))));
((ii) : (INGREDIENTES));
((estoqueR) : (((dom(estoqueR)) +-> (ran(estoqueR)))));
(0 +1 <= qq);
(qq +1 <= 10);
((qq) : (NAT));
((ii) : (dom(estoqueR)));
not(((({((estoqueR )(ii) + qq)}\/{10})) = ({})));
((((({((estoqueR )(ii) + qq)}\/{10})) /\ ((INTEGER - NATURAL)))) : (FIN(INTEGER)));
not(((({((estoqueR )(ii) - qq)}\/{0})) = ({})));
((((({((estoqueR )(ii) - qq)}\/{0})) /\ (NATURAL))) : (FIN(NATURAL)));
((aa) : (dom(temporizacaoR)));
((aa) : (ALIMENTO));
((aa) : (dom(receita_al_inR)));
((receita_al_inR) : (((dom(receita_al_inR)) +-> (ran(receita_al_inR)))));
not(aa : dom(temporizacaoR));
((pp) : ((NAT-{0})));
((tt) : ((NAT-{0})));
((temporizacaoR) : (((dom(temporizacaoR)) +-> (ran(temporizacaoR)))))
END
&
THEORY EnumerateX
END
